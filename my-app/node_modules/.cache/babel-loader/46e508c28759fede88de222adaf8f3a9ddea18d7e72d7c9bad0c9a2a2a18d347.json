{"ast":null,"code":"function getRandomLower() {\n  return String.fromCharCode(Math.floor(Math.random() * 26) + 97);\n}\nfunction getRandomUpper() {\n  return String.fromCharCode(Math.floor(Math.random() * 26) + 65);\n}\nfunction getRandomNumber() {\n  return String.fromCharCode(Math.floor(Math.random() * 10) + 48);\n}\nfunction getRandomSymbol() {\n  const symbols = \"!@#$%^&*(){}[]=<>/,.\";\n  return symbols[Math.floor(Math.random() * symbols.length)];\n}\nexport default function passwordGenerator() {\n  let obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    length: 0,\n    Uppercase: false,\n    Lowercase: false,\n    Numbers: false,\n    Symbols: false,\n    isReset: false\n  };\n  const {\n    length,\n    Uppercase,\n    Lowercase,\n    Numbers,\n    Symbols\n  } = obj;\n  const numTrue = Object.entries(obj).reduce((_ref, value) => {\n    let [key, numTrue] = _ref;\n    if (value === true && key !== 'isReset') numTrue += 1;\n    return numTrue;\n  }, 0);\n  // how do i improve this code?\n  if (numTrue === 0 || length === 0) return \"P4$5W0rD!\";\n  let generatedPassword = \"\";\n  for (let i = 0; i < length; i += numTrue) {\n    if (Numbers) {\n      generatedPassword += getRandomNumber();\n    }\n    if (Uppercase) {\n      generatedPassword += getRandomUpper();\n    }\n    if (Symbols) {\n      generatedPassword += getRandomSymbol();\n    }\n    if (Lowercase) {\n      generatedPassword += getRandomLower();\n    }\n  }\n  const finalPassword = generatedPassword.slice(0, length);\n  return finalPassword;\n}","map":{"version":3,"names":["getRandomLower","String","fromCharCode","Math","floor","random","getRandomUpper","getRandomNumber","getRandomSymbol","symbols","length","passwordGenerator","obj","Uppercase","Lowercase","Numbers","Symbols","isReset","numTrue","Object","entries","reduce","value","key","generatedPassword","i","finalPassword","slice"],"sources":["C:/Users/Lenovo-L340/Downloads/frontend-mentor/password-generator/my-app/src/generatePassword.js"],"sourcesContent":["function getRandomLower() {\r\n  return String.fromCharCode(Math.floor(Math.random() * 26) + 97);\r\n}\r\nfunction getRandomUpper() {\r\n  return String.fromCharCode(Math.floor(Math.random() * 26) + 65);\r\n}\r\nfunction getRandomNumber() {\r\n  return String.fromCharCode(Math.floor(Math.random() * 10) + 48);\r\n}\r\n\r\nfunction getRandomSymbol() {\r\n  const symbols = \"!@#$%^&*(){}[]=<>/,.\";\r\n  return symbols[Math.floor(Math.random() * symbols.length)];\r\n}\r\nexport default function passwordGenerator(\r\n  obj = {\r\n    length: 0,\r\n    Uppercase: false,\r\n    Lowercase: false,\r\n    Numbers: false,\r\n    Symbols: false,\r\n    isReset:false,\r\n  }\r\n) {\r\n  const { length, Uppercase, Lowercase, Numbers, Symbols } = obj;\r\n  const numTrue = Object.entries(obj).reduce(([key,numTrue], value) => {\r\n    if (value === true && key!== 'isReset') numTrue += 1;\r\n    return numTrue;\r\n  }, 0);\r\n  // how do i improve this code?\r\n  if (numTrue === 0 || length === 0) return \"P4$5W0rD!\";\r\n  let generatedPassword = \"\";\r\n\r\n  for (let i = 0; i < length; i += numTrue) {\r\n    if (Numbers) {\r\n      generatedPassword += getRandomNumber();\r\n    }\r\n    if (Uppercase) {\r\n      generatedPassword += getRandomUpper();\r\n    }\r\n    if (Symbols) {\r\n      generatedPassword += getRandomSymbol();\r\n    }\r\n    if (Lowercase) {\r\n      generatedPassword += getRandomLower();\r\n    }\r\n  }\r\n  const finalPassword = generatedPassword.slice(0, length);\r\n  return finalPassword;\r\n}\r\n"],"mappings":"AAAA,SAASA,cAAc,GAAG;EACxB,OAAOC,MAAM,CAACC,YAAY,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;AACjE;AACA,SAASC,cAAc,GAAG;EACxB,OAAOL,MAAM,CAACC,YAAY,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;AACjE;AACA,SAASE,eAAe,GAAG;EACzB,OAAON,MAAM,CAACC,YAAY,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;AACjE;AAEA,SAASG,eAAe,GAAG;EACzB,MAAMC,OAAO,GAAG,sBAAsB;EACtC,OAAOA,OAAO,CAACN,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGI,OAAO,CAACC,MAAM,CAAC,CAAC;AAC5D;AACA,eAAe,SAASC,iBAAiB,GASvC;EAAA,IARAC,GAAG,uEAAG;IACJF,MAAM,EAAE,CAAC;IACTG,SAAS,EAAE,KAAK;IAChBC,SAAS,EAAE,KAAK;IAChBC,OAAO,EAAE,KAAK;IACdC,OAAO,EAAE,KAAK;IACdC,OAAO,EAAC;EACV,CAAC;EAED,MAAM;IAAEP,MAAM;IAAEG,SAAS;IAAEC,SAAS;IAAEC,OAAO;IAAEC;EAAQ,CAAC,GAAGJ,GAAG;EAC9D,MAAMM,OAAO,GAAGC,MAAM,CAACC,OAAO,CAACR,GAAG,CAAC,CAACS,MAAM,CAAC,OAAgBC,KAAK,KAAK;IAAA,IAAzB,CAACC,GAAG,EAACL,OAAO,CAAC;IACvD,IAAII,KAAK,KAAK,IAAI,IAAIC,GAAG,KAAI,SAAS,EAAEL,OAAO,IAAI,CAAC;IACpD,OAAOA,OAAO;EAChB,CAAC,EAAE,CAAC,CAAC;EACL;EACA,IAAIA,OAAO,KAAK,CAAC,IAAIR,MAAM,KAAK,CAAC,EAAE,OAAO,WAAW;EACrD,IAAIc,iBAAiB,GAAG,EAAE;EAE1B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGf,MAAM,EAAEe,CAAC,IAAIP,OAAO,EAAE;IACxC,IAAIH,OAAO,EAAE;MACXS,iBAAiB,IAAIjB,eAAe,EAAE;IACxC;IACA,IAAIM,SAAS,EAAE;MACbW,iBAAiB,IAAIlB,cAAc,EAAE;IACvC;IACA,IAAIU,OAAO,EAAE;MACXQ,iBAAiB,IAAIhB,eAAe,EAAE;IACxC;IACA,IAAIM,SAAS,EAAE;MACbU,iBAAiB,IAAIxB,cAAc,EAAE;IACvC;EACF;EACA,MAAM0B,aAAa,GAAGF,iBAAiB,CAACG,KAAK,CAAC,CAAC,EAAEjB,MAAM,CAAC;EACxD,OAAOgB,aAAa;AACtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}